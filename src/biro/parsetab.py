# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = "3.10"

_lr_method = "LALR"

_lr_signature = "nonassocLESSMOREEQUALSleftPLUSMINUSleftASTERISKDIVIDEnonassocASSIGNleftANDORAND ARREST ASSIGN ASTERISK ATTEMPT BIRO BOOL COLON COMMA DIVIDE DONATE DOT EQUALS FALSE ID IS LCURL LEAVE LESS LITERAL_A LITERAL_Q LITERAL_S LOOP LPAREN LSQUARE MINUS MORE NUM NUMBER OR PLUS PROCEED QUESMARK RCURL RPAREN RSQUARE SMALLBIRO STR STRING TRUEprogram : statement_liststatement_list : statement statement_list\n        | statementstatement : variable_declaration\n        | variable_assignment\n        | conditional_statement\n        | array_declaration\n        | queue_declaration\n        | stack_declaration\n        | try_block\n        | catch_block\n        | loop_statement\n        | function_declaration\n        | function_call\n        | builtin_call\n        | emptyvariable_declaration : BIRO ID COLON type ASSIGN assigned_expression\n        | SMALLBIRO ID COLON type ASSIGN assigned_expressionvariable_assignment : ID ASSIGN assigned_expressionassigned_expression : expression\n        | array_declaration\n        | queue_declaration\n        | stack_declarationarray_declaration : LITERAL_A LSQUARE expression_list RSQUAREqueue_declaration : LITERAL_Q LSQUARE expression_list RSQUAREstack_declaration : LITERAL_S LSQUARE expression_list RSQUAREconditional_statement : BIRO IS expression QUESMARK LCURL control_flow_statements_list RCURLtry_block : BIRO ATTEMPT LCURL statement_list RCURLcatch_block : BIRO ARREST LCURL statement_list RCURLloop_statement : BIRO LOOP LCURL control_flow_statements_list RCURLfunction_declaration : BIRO ID LPAREN arg_list RPAREN COLON LPAREN type_list RPAREN LCURL donate_statement_list RCURLfunction_call : ID LPAREN expression_list RPARENbuiltin_call : BIRO DOT function_calldonate_statement_list : donate_statement donate_statement_list\n        | donate_statementdonate_statement : statement_list\n        | DONATE expressioncontrol_flow_statements_list : control_flow_statements control_flow_statements_list\n        | control_flow_statementscontrol_flow_statements : statement_list\n        | LEAVE\n        | PROCEED\n        | DONATE expressionexpression : ID\n        | STRING\n        | NUMBER\n        | TRUE\n        | FALSE\n        | builtin_call\n        | function_call\n        | expression PLUS expression\n        | expression MINUS expression\n        | expression ASTERISK expression\n        | expression DIVIDE expression\n        | expression EQUALS expression\n        | expression MORE expression\n        | expression LESS expression\n        | expression AND expression\n        | expression OR expressionexpression_list : expression COMMA expression_list\n        | expression\n        | emptyarg_list : ID COMMA arg_list\n        | ID\n        | emptytype_list : type COMMA type_list\n        | type\n        | emptytype : NUM\n        | STR\n        | BOOL\n        | LITERAL_A LSQUARE NUM RSQUARE\n        | LITERAL_A LSQUARE STR RSQUARE\n        | LITERAL_A LSQUARE BOOL RSQUARE\n        | LITERAL_Q LSQUARE NUM RSQUARE\n        | LITERAL_Q LSQUARE STR RSQUARE\n        | LITERAL_Q LSQUARE BOOL RSQUARE\n        | LITERAL_S LSQUARE NUM RSQUARE\n        | LITERAL_S LSQUARE STR RSQUARE\n        | LITERAL_S LSQUARE BOOL RSQUAREempty :"

_lr_action_items = {
    "BIRO": (
        [
            0,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            23,
            25,
            30,
            31,
            33,
            34,
            35,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            52,
            53,
            54,
            55,
            56,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            95,
            96,
            97,
            98,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            118,
            120,
            121,
            134,
            145,
            151,
            154,
            155,
            156,
            157,
            159,
        ],
        [
            17,
            17,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            -10,
            -11,
            -12,
            -13,
            -14,
            -15,
            -16,
            -2,
            38,
            38,
            38,
            38,
            38,
            38,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            17,
            17,
            17,
            -33,
            -19,
            -20,
            -21,
            -22,
            -23,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            17,
            -40,
            -41,
            -42,
            38,
            -32,
            38,
            -24,
            -25,
            -26,
            38,
            17,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -59,
            -28,
            -29,
            -30,
            -43,
            38,
            -17,
            -18,
            -27,
            17,
            17,
            -36,
            38,
            -31,
            -37,
        ],
    ),
    "SMALLBIRO": (
        [
            0,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            23,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            52,
            53,
            54,
            55,
            56,
            87,
            88,
            89,
            90,
            92,
            95,
            96,
            97,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            118,
            121,
            134,
            145,
            151,
            154,
            155,
            157,
            159,
        ],
        [
            19,
            19,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            -10,
            -11,
            -12,
            -13,
            -14,
            -15,
            -16,
            -2,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            19,
            19,
            19,
            -33,
            -19,
            -20,
            -21,
            -22,
            -23,
            19,
            -40,
            -41,
            -42,
            -32,
            -24,
            -25,
            -26,
            19,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -59,
            -28,
            -29,
            -30,
            -43,
            -17,
            -18,
            -27,
            19,
            19,
            -36,
            -31,
            -37,
        ],
    ),
    "ID": (
        [
            0,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            19,
            23,
            25,
            29,
            30,
            31,
            33,
            34,
            35,
            37,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            52,
            53,
            54,
            55,
            56,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            95,
            96,
            97,
            98,
            102,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            118,
            120,
            121,
            134,
            145,
            151,
            154,
            155,
            156,
            157,
            159,
        ],
        [
            18,
            18,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            -10,
            -11,
            -12,
            -13,
            -14,
            -15,
            -16,
            24,
            32,
            -2,
            40,
            51,
            40,
            40,
            40,
            40,
            40,
            71,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            18,
            18,
            18,
            -33,
            -19,
            -20,
            -21,
            -22,
            -23,
            40,
            40,
            40,
            40,
            40,
            40,
            40,
            40,
            40,
            18,
            -40,
            -41,
            -42,
            40,
            -32,
            40,
            -24,
            -25,
            -26,
            40,
            71,
            18,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -59,
            -28,
            -29,
            -30,
            -43,
            40,
            -17,
            -18,
            -27,
            18,
            18,
            -36,
            40,
            -31,
            -37,
        ],
    ),
    "LITERAL_A": (
        [
            0,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            23,
            30,
            36,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            52,
            53,
            54,
            55,
            56,
            60,
            87,
            88,
            89,
            90,
            92,
            95,
            96,
            97,
            98,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            118,
            120,
            121,
            134,
            144,
            145,
            150,
            151,
            154,
            155,
            157,
            159,
        ],
        [
            20,
            20,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            -10,
            -11,
            -12,
            -13,
            -14,
            -15,
            -16,
            -2,
            20,
            68,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            20,
            20,
            20,
            -33,
            -19,
            -20,
            -21,
            -22,
            -23,
            68,
            20,
            -40,
            -41,
            -42,
            -32,
            -24,
            -25,
            -26,
            20,
            20,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -59,
            -28,
            -29,
            -30,
            -43,
            20,
            -17,
            -18,
            68,
            -27,
            68,
            20,
            20,
            -36,
            -31,
            -37,
        ],
    ),
    "LITERAL_Q": (
        [
            0,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            23,
            30,
            36,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            52,
            53,
            54,
            55,
            56,
            60,
            87,
            88,
            89,
            90,
            92,
            95,
            96,
            97,
            98,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            118,
            120,
            121,
            134,
            144,
            145,
            150,
            151,
            154,
            155,
            157,
            159,
        ],
        [
            21,
            21,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            -10,
            -11,
            -12,
            -13,
            -14,
            -15,
            -16,
            -2,
            21,
            69,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            21,
            21,
            21,
            -33,
            -19,
            -20,
            -21,
            -22,
            -23,
            69,
            21,
            -40,
            -41,
            -42,
            -32,
            -24,
            -25,
            -26,
            21,
            21,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -59,
            -28,
            -29,
            -30,
            -43,
            21,
            -17,
            -18,
            69,
            -27,
            69,
            21,
            21,
            -36,
            -31,
            -37,
        ],
    ),
    "LITERAL_S": (
        [
            0,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            23,
            30,
            36,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            52,
            53,
            54,
            55,
            56,
            60,
            87,
            88,
            89,
            90,
            92,
            95,
            96,
            97,
            98,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            118,
            120,
            121,
            134,
            144,
            145,
            150,
            151,
            154,
            155,
            157,
            159,
        ],
        [
            22,
            22,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            -10,
            -11,
            -12,
            -13,
            -14,
            -15,
            -16,
            -2,
            22,
            70,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            22,
            22,
            22,
            -33,
            -19,
            -20,
            -21,
            -22,
            -23,
            70,
            22,
            -40,
            -41,
            -42,
            -32,
            -24,
            -25,
            -26,
            22,
            22,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -59,
            -28,
            -29,
            -30,
            -43,
            22,
            -17,
            -18,
            70,
            -27,
            70,
            22,
            22,
            -36,
            -31,
            -37,
        ],
    ),
    "$end": (
        [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            23,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            50,
            52,
            53,
            54,
            55,
            56,
            92,
            95,
            96,
            97,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            121,
            134,
            145,
            157,
        ],
        [
            -81,
            0,
            -1,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            -10,
            -11,
            -12,
            -13,
            -14,
            -15,
            -16,
            -2,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -33,
            -19,
            -20,
            -21,
            -22,
            -23,
            -32,
            -24,
            -25,
            -26,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -59,
            -28,
            -29,
            -30,
            -17,
            -18,
            -27,
            -31,
        ],
    ),
    "RCURL": (
        [
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            23,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            52,
            53,
            54,
            55,
            56,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            92,
            95,
            96,
            97,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            121,
            133,
            134,
            145,
            151,
            153,
            154,
            155,
            157,
            158,
            159,
        ],
        [
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            -10,
            -11,
            -12,
            -13,
            -14,
            -15,
            -16,
            -2,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -81,
            -81,
            -81,
            -33,
            -19,
            -20,
            -21,
            -22,
            -23,
            114,
            115,
            116,
            -39,
            -40,
            -41,
            -42,
            -32,
            -24,
            -25,
            -26,
            -81,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -59,
            -28,
            -29,
            -30,
            -38,
            -43,
            -17,
            145,
            -18,
            -27,
            -81,
            157,
            -35,
            -36,
            -31,
            -34,
            -37,
        ],
    ),
    "LEAVE": (
        [
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            23,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            49,
            50,
            52,
            53,
            54,
            55,
            56,
            87,
            88,
            89,
            90,
            92,
            95,
            96,
            97,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            118,
            121,
            134,
            145,
            157,
        ],
        [
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            -10,
            -11,
            -12,
            -13,
            -14,
            -15,
            -16,
            -2,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            89,
            -33,
            -19,
            -20,
            -21,
            -22,
            -23,
            89,
            -40,
            -41,
            -42,
            -32,
            -24,
            -25,
            -26,
            89,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -59,
            -28,
            -29,
            -30,
            -43,
            -17,
            -18,
            -27,
            -31,
        ],
    ),
    "PROCEED": (
        [
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            23,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            49,
            50,
            52,
            53,
            54,
            55,
            56,
            87,
            88,
            89,
            90,
            92,
            95,
            96,
            97,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            118,
            121,
            134,
            145,
            157,
        ],
        [
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            -10,
            -11,
            -12,
            -13,
            -14,
            -15,
            -16,
            -2,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            90,
            -33,
            -19,
            -20,
            -21,
            -22,
            -23,
            90,
            -40,
            -41,
            -42,
            -32,
            -24,
            -25,
            -26,
            90,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -59,
            -28,
            -29,
            -30,
            -43,
            -17,
            -18,
            -27,
            -31,
        ],
    ),
    "DONATE": (
        [
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            23,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            49,
            50,
            52,
            53,
            54,
            55,
            56,
            87,
            88,
            89,
            90,
            92,
            95,
            96,
            97,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            118,
            121,
            134,
            145,
            151,
            154,
            155,
            157,
            159,
        ],
        [
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            -10,
            -11,
            -12,
            -13,
            -14,
            -15,
            -16,
            -2,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            91,
            -33,
            -19,
            -20,
            -21,
            -22,
            -23,
            91,
            -40,
            -41,
            -42,
            -32,
            -24,
            -25,
            -26,
            91,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -59,
            -28,
            -29,
            -30,
            -43,
            -17,
            -18,
            -27,
            156,
            156,
            -36,
            -31,
            -37,
        ],
    ),
    "IS": (
        [
            17,
        ],
        [
            25,
        ],
    ),
    "ATTEMPT": (
        [
            17,
        ],
        [
            26,
        ],
    ),
    "ARREST": (
        [
            17,
        ],
        [
            27,
        ],
    ),
    "LOOP": (
        [
            17,
        ],
        [
            28,
        ],
    ),
    "DOT": (
        [
            17,
            38,
        ],
        [
            29,
            29,
        ],
    ),
    "ASSIGN": (
        [
            18,
            64,
            65,
            66,
            67,
            94,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
        ],
        [
            30,
            98,
            -69,
            -70,
            -71,
            120,
            -72,
            -73,
            -74,
            -75,
            -76,
            -77,
            -78,
            -79,
            -80,
        ],
    ),
    "LPAREN": (
        [
            18,
            24,
            40,
            51,
            132,
        ],
        [
            31,
            37,
            31,
            31,
            144,
        ],
    ),
    "LSQUARE": (
        [
            20,
            21,
            22,
            68,
            69,
            70,
        ],
        [
            33,
            34,
            35,
            99,
            100,
            101,
        ],
    ),
    "COLON": (
        [
            24,
            32,
            103,
        ],
        [
            36,
            60,
            132,
        ],
    ),
    "STRING": (
        [
            25,
            30,
            31,
            33,
            34,
            35,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            91,
            93,
            98,
            120,
            156,
        ],
        [
            41,
            41,
            41,
            41,
            41,
            41,
            41,
            41,
            41,
            41,
            41,
            41,
            41,
            41,
            41,
            41,
            41,
            41,
            41,
            41,
        ],
    ),
    "NUMBER": (
        [
            25,
            30,
            31,
            33,
            34,
            35,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            91,
            93,
            98,
            120,
            156,
        ],
        [
            42,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
        ],
    ),
    "TRUE": (
        [
            25,
            30,
            31,
            33,
            34,
            35,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            91,
            93,
            98,
            120,
            156,
        ],
        [
            43,
            43,
            43,
            43,
            43,
            43,
            43,
            43,
            43,
            43,
            43,
            43,
            43,
            43,
            43,
            43,
            43,
            43,
            43,
            43,
        ],
    ),
    "FALSE": (
        [
            25,
            30,
            31,
            33,
            34,
            35,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            91,
            93,
            98,
            120,
            156,
        ],
        [
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
        ],
    ),
    "LCURL": (
        [
            26,
            27,
            28,
            74,
            149,
        ],
        [
            47,
            48,
            49,
            104,
            151,
        ],
    ),
    "RPAREN": (
        [
            31,
            37,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            50,
            57,
            58,
            59,
            65,
            66,
            67,
            71,
            72,
            73,
            92,
            93,
            102,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            119,
            131,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            146,
            147,
            148,
            150,
            152,
        ],
        [
            -81,
            -81,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -33,
            92,
            -61,
            -62,
            -69,
            -70,
            -71,
            -64,
            103,
            -65,
            -32,
            -81,
            -81,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -59,
            -60,
            -63,
            -72,
            -73,
            -74,
            -75,
            -76,
            -77,
            -78,
            -79,
            -80,
            -81,
            149,
            -67,
            -68,
            -81,
            -66,
        ],
    ),
    "RSQUARE": (
        [
            33,
            34,
            35,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            50,
            58,
            59,
            61,
            62,
            63,
            92,
            93,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            119,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
        ],
        [
            -81,
            -81,
            -81,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -33,
            -61,
            -62,
            95,
            96,
            97,
            -32,
            -81,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -59,
            -60,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
        ],
    ),
    "NUM": (
        [
            36,
            60,
            99,
            100,
            101,
            144,
            150,
        ],
        [
            65,
            65,
            122,
            125,
            128,
            65,
            65,
        ],
    ),
    "STR": (
        [
            36,
            60,
            99,
            100,
            101,
            144,
            150,
        ],
        [
            66,
            66,
            123,
            126,
            129,
            66,
            66,
        ],
    ),
    "BOOL": (
        [
            36,
            60,
            99,
            100,
            101,
            144,
            150,
        ],
        [
            67,
            67,
            124,
            127,
            130,
            67,
            67,
        ],
    ),
    "QUESMARK": (
        [
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            50,
            92,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
        ],
        [
            74,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -33,
            -32,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -59,
        ],
    ),
    "PLUS": (
        [
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            50,
            53,
            58,
            92,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            118,
            159,
        ],
        [
            75,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -33,
            75,
            75,
            -32,
            -51,
            -52,
            -53,
            -54,
            75,
            75,
            75,
            -58,
            -59,
            75,
            75,
        ],
    ),
    "MINUS": (
        [
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            50,
            53,
            58,
            92,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            118,
            159,
        ],
        [
            76,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -33,
            76,
            76,
            -32,
            -51,
            -52,
            -53,
            -54,
            76,
            76,
            76,
            -58,
            -59,
            76,
            76,
        ],
    ),
    "ASTERISK": (
        [
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            50,
            53,
            58,
            92,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            118,
            159,
        ],
        [
            77,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -33,
            77,
            77,
            -32,
            77,
            77,
            -53,
            -54,
            77,
            77,
            77,
            -58,
            -59,
            77,
            77,
        ],
    ),
    "DIVIDE": (
        [
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            50,
            53,
            58,
            92,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            118,
            159,
        ],
        [
            78,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -33,
            78,
            78,
            -32,
            78,
            78,
            -53,
            -54,
            78,
            78,
            78,
            -58,
            -59,
            78,
            78,
        ],
    ),
    "EQUALS": (
        [
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            50,
            53,
            58,
            92,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            118,
            159,
        ],
        [
            79,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -33,
            79,
            79,
            -32,
            -51,
            -52,
            -53,
            -54,
            None,
            None,
            None,
            -58,
            -59,
            79,
            79,
        ],
    ),
    "MORE": (
        [
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            50,
            53,
            58,
            92,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            118,
            159,
        ],
        [
            80,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -33,
            80,
            80,
            -32,
            -51,
            -52,
            -53,
            -54,
            None,
            None,
            None,
            -58,
            -59,
            80,
            80,
        ],
    ),
    "LESS": (
        [
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            50,
            53,
            58,
            92,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            118,
            159,
        ],
        [
            81,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -33,
            81,
            81,
            -32,
            -51,
            -52,
            -53,
            -54,
            None,
            None,
            None,
            -58,
            -59,
            81,
            81,
        ],
    ),
    "AND": (
        [
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            50,
            53,
            58,
            92,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            118,
            159,
        ],
        [
            82,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -33,
            82,
            82,
            -32,
            82,
            82,
            82,
            82,
            82,
            82,
            82,
            -58,
            -59,
            82,
            82,
        ],
    ),
    "OR": (
        [
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            50,
            53,
            58,
            92,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            118,
            159,
        ],
        [
            83,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -33,
            83,
            83,
            -32,
            83,
            83,
            83,
            83,
            83,
            83,
            83,
            -58,
            -59,
            83,
            83,
        ],
    ),
    "COMMA": (
        [
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            50,
            58,
            65,
            66,
            67,
            71,
            92,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            147,
        ],
        [
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -33,
            93,
            -69,
            -70,
            -71,
            102,
            -32,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -59,
            -72,
            -73,
            -74,
            -75,
            -76,
            -77,
            -78,
            -79,
            -80,
            150,
        ],
    ),
}

_lr_action = {}
for _k, _v in _lr_action_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_action:
            _lr_action[_x] = {}
        _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {
    "program": (
        [
            0,
        ],
        [
            1,
        ],
    ),
    "statement_list": (
        [
            0,
            3,
            47,
            48,
            49,
            87,
            104,
            151,
            154,
        ],
        [
            2,
            23,
            84,
            85,
            88,
            88,
            88,
            155,
            155,
        ],
    ),
    "statement": (
        [
            0,
            3,
            47,
            48,
            49,
            87,
            104,
            151,
            154,
        ],
        [
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
        ],
    ),
    "variable_declaration": (
        [
            0,
            3,
            47,
            48,
            49,
            87,
            104,
            151,
            154,
        ],
        [
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
        ],
    ),
    "variable_assignment": (
        [
            0,
            3,
            47,
            48,
            49,
            87,
            104,
            151,
            154,
        ],
        [
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
        ],
    ),
    "conditional_statement": (
        [
            0,
            3,
            47,
            48,
            49,
            87,
            104,
            151,
            154,
        ],
        [
            6,
            6,
            6,
            6,
            6,
            6,
            6,
            6,
            6,
        ],
    ),
    "array_declaration": (
        [
            0,
            3,
            30,
            47,
            48,
            49,
            87,
            98,
            104,
            120,
            151,
            154,
        ],
        [
            7,
            7,
            54,
            7,
            7,
            7,
            7,
            54,
            7,
            54,
            7,
            7,
        ],
    ),
    "queue_declaration": (
        [
            0,
            3,
            30,
            47,
            48,
            49,
            87,
            98,
            104,
            120,
            151,
            154,
        ],
        [
            8,
            8,
            55,
            8,
            8,
            8,
            8,
            55,
            8,
            55,
            8,
            8,
        ],
    ),
    "stack_declaration": (
        [
            0,
            3,
            30,
            47,
            48,
            49,
            87,
            98,
            104,
            120,
            151,
            154,
        ],
        [
            9,
            9,
            56,
            9,
            9,
            9,
            9,
            56,
            9,
            56,
            9,
            9,
        ],
    ),
    "try_block": (
        [
            0,
            3,
            47,
            48,
            49,
            87,
            104,
            151,
            154,
        ],
        [
            10,
            10,
            10,
            10,
            10,
            10,
            10,
            10,
            10,
        ],
    ),
    "catch_block": (
        [
            0,
            3,
            47,
            48,
            49,
            87,
            104,
            151,
            154,
        ],
        [
            11,
            11,
            11,
            11,
            11,
            11,
            11,
            11,
            11,
        ],
    ),
    "loop_statement": (
        [
            0,
            3,
            47,
            48,
            49,
            87,
            104,
            151,
            154,
        ],
        [
            12,
            12,
            12,
            12,
            12,
            12,
            12,
            12,
            12,
        ],
    ),
    "function_declaration": (
        [
            0,
            3,
            47,
            48,
            49,
            87,
            104,
            151,
            154,
        ],
        [
            13,
            13,
            13,
            13,
            13,
            13,
            13,
            13,
            13,
        ],
    ),
    "function_call": (
        [
            0,
            3,
            25,
            29,
            30,
            31,
            33,
            34,
            35,
            47,
            48,
            49,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            87,
            91,
            93,
            98,
            104,
            120,
            151,
            154,
            156,
        ],
        [
            14,
            14,
            46,
            50,
            46,
            46,
            46,
            46,
            46,
            14,
            14,
            14,
            46,
            46,
            46,
            46,
            46,
            46,
            46,
            46,
            46,
            14,
            46,
            46,
            46,
            14,
            46,
            14,
            14,
            46,
        ],
    ),
    "builtin_call": (
        [
            0,
            3,
            25,
            30,
            31,
            33,
            34,
            35,
            47,
            48,
            49,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            87,
            91,
            93,
            98,
            104,
            120,
            151,
            154,
            156,
        ],
        [
            15,
            15,
            45,
            45,
            45,
            45,
            45,
            45,
            15,
            15,
            15,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            15,
            45,
            45,
            45,
            15,
            45,
            15,
            15,
            45,
        ],
    ),
    "empty": (
        [
            0,
            3,
            31,
            33,
            34,
            35,
            37,
            47,
            48,
            49,
            87,
            93,
            102,
            104,
            144,
            150,
            151,
            154,
        ],
        [
            16,
            16,
            59,
            59,
            59,
            59,
            73,
            16,
            16,
            16,
            16,
            59,
            73,
            16,
            148,
            148,
            16,
            16,
        ],
    ),
    "expression": (
        [
            25,
            30,
            31,
            33,
            34,
            35,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            91,
            93,
            98,
            120,
            156,
        ],
        [
            39,
            53,
            58,
            58,
            58,
            58,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            118,
            58,
            53,
            53,
            159,
        ],
    ),
    "assigned_expression": (
        [
            30,
            98,
            120,
        ],
        [
            52,
            121,
            134,
        ],
    ),
    "expression_list": (
        [
            31,
            33,
            34,
            35,
            93,
        ],
        [
            57,
            61,
            62,
            63,
            119,
        ],
    ),
    "type": (
        [
            36,
            60,
            144,
            150,
        ],
        [
            64,
            94,
            147,
            147,
        ],
    ),
    "arg_list": (
        [
            37,
            102,
        ],
        [
            72,
            131,
        ],
    ),
    "control_flow_statements_list": (
        [
            49,
            87,
            104,
        ],
        [
            86,
            117,
            133,
        ],
    ),
    "control_flow_statements": (
        [
            49,
            87,
            104,
        ],
        [
            87,
            87,
            87,
        ],
    ),
    "type_list": (
        [
            144,
            150,
        ],
        [
            146,
            152,
        ],
    ),
    "donate_statement_list": (
        [
            151,
            154,
        ],
        [
            153,
            158,
        ],
    ),
    "donate_statement": (
        [
            151,
            154,
        ],
        [
            154,
            154,
        ],
    ),
}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_goto:
            _lr_goto[_x] = {}
        _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
    ("S' -> program", "S'", 1, None, None, None),
    (
        "program -> statement_list",
        "program",
        1,
        "p_program",
        "lexerparser.py",
        118,
    ),
    (
        "statement_list -> statement statement_list",
        "statement_list",
        2,
        "p_statement_list",
        "lexerparser.py",
        123,
    ),
    (
        "statement_list -> statement",
        "statement_list",
        1,
        "p_statement_list",
        "lexerparser.py",
        124,
    ),
    (
        "statement -> variable_declaration",
        "statement",
        1,
        "p_statement",
        "lexerparser.py",
        132,
    ),
    (
        "statement -> variable_assignment",
        "statement",
        1,
        "p_statement",
        "lexerparser.py",
        133,
    ),
    (
        "statement -> conditional_statement",
        "statement",
        1,
        "p_statement",
        "lexerparser.py",
        134,
    ),
    (
        "statement -> array_declaration",
        "statement",
        1,
        "p_statement",
        "lexerparser.py",
        135,
    ),
    (
        "statement -> queue_declaration",
        "statement",
        1,
        "p_statement",
        "lexerparser.py",
        136,
    ),
    (
        "statement -> stack_declaration",
        "statement",
        1,
        "p_statement",
        "lexerparser.py",
        137,
    ),
    (
        "statement -> try_block",
        "statement",
        1,
        "p_statement",
        "lexerparser.py",
        138,
    ),
    (
        "statement -> catch_block",
        "statement",
        1,
        "p_statement",
        "lexerparser.py",
        139,
    ),
    (
        "statement -> loop_statement",
        "statement",
        1,
        "p_statement",
        "lexerparser.py",
        140,
    ),
    (
        "statement -> function_declaration",
        "statement",
        1,
        "p_statement",
        "lexerparser.py",
        141,
    ),
    (
        "statement -> function_call",
        "statement",
        1,
        "p_statement",
        "lexerparser.py",
        142,
    ),
    (
        "statement -> builtin_call",
        "statement",
        1,
        "p_statement",
        "lexerparser.py",
        143,
    ),
    (
        "statement -> empty",
        "statement",
        1,
        "p_statement",
        "lexerparser.py",
        144,
    ),
    (
        "variable_declaration -> BIRO ID COLON type ASSIGN assigned_expression",
        "variable_declaration",
        6,
        "p_variable_declaration",
        "lexerparser.py",
        149,
    ),
    (
        "variable_declaration -> SMALLBIRO ID COLON type ASSIGN assigned_expression",
        "variable_declaration",
        6,
        "p_variable_declaration",
        "lexerparser.py",
        150,
    ),
    (
        "variable_assignment -> ID ASSIGN assigned_expression",
        "variable_assignment",
        3,
        "p_variable_assignment",
        "lexerparser.py",
        160,
    ),
    (
        "assigned_expression -> expression",
        "assigned_expression",
        1,
        "p_assigned_expression",
        "lexerparser.py",
        165,
    ),
    (
        "assigned_expression -> array_declaration",
        "assigned_expression",
        1,
        "p_assigned_expression",
        "lexerparser.py",
        166,
    ),
    (
        "assigned_expression -> queue_declaration",
        "assigned_expression",
        1,
        "p_assigned_expression",
        "lexerparser.py",
        167,
    ),
    (
        "assigned_expression -> stack_declaration",
        "assigned_expression",
        1,
        "p_assigned_expression",
        "lexerparser.py",
        168,
    ),
    (
        "array_declaration -> LITERAL_A LSQUARE expression_list RSQUARE",
        "array_declaration",
        4,
        "p_array_declaration",
        "lexerparser.py",
        173,
    ),
    (
        "queue_declaration -> LITERAL_Q LSQUARE expression_list RSQUARE",
        "queue_declaration",
        4,
        "p_queue_declaration",
        "lexerparser.py",
        178,
    ),
    (
        "stack_declaration -> LITERAL_S LSQUARE expression_list RSQUARE",
        "stack_declaration",
        4,
        "p_stack_declaration",
        "lexerparser.py",
        183,
    ),
    (
        "conditional_statement -> BIRO IS expression QUESMARK LCURL control_flow_statements_list RCURL",
        "conditional_statement",
        7,
        "p_conditional_statement",
        "lexerparser.py",
        188,
    ),
    (
        "try_block -> BIRO ATTEMPT LCURL statement_list RCURL",
        "try_block",
        5,
        "p_try_block",
        "lexerparser.py",
        193,
    ),
    (
        "catch_block -> BIRO ARREST LCURL statement_list RCURL",
        "catch_block",
        5,
        "p_catch_block",
        "lexerparser.py",
        198,
    ),
    (
        "loop_statement -> BIRO LOOP LCURL control_flow_statements_list RCURL",
        "loop_statement",
        5,
        "p_loop_statement",
        "lexerparser.py",
        203,
    ),
    (
        "function_declaration -> BIRO ID LPAREN arg_list RPAREN COLON LPAREN type_list RPAREN LCURL donate_statement_list RCURL",
        "function_declaration",
        12,
        "p_function_declaration",
        "lexerparser.py",
        208,
    ),
    (
        "function_call -> ID LPAREN expression_list RPAREN",
        "function_call",
        4,
        "p_function_call",
        "lexerparser.py",
        227,
    ),
    (
        "builtin_call -> BIRO DOT function_call",
        "builtin_call",
        3,
        "p_builtin_call",
        "lexerparser.py",
        232,
    ),
    (
        "donate_statement_list -> donate_statement donate_statement_list",
        "donate_statement_list",
        2,
        "p_donate_statement_list",
        "lexerparser.py",
        237,
    ),
    (
        "donate_statement_list -> donate_statement",
        "donate_statement_list",
        1,
        "p_donate_statement_list",
        "lexerparser.py",
        238,
    ),
    (
        "donate_statement -> statement_list",
        "donate_statement",
        1,
        "p_donate_statement",
        "lexerparser.py",
        246,
    ),
    (
        "donate_statement -> DONATE expression",
        "donate_statement",
        2,
        "p_donate_statement",
        "lexerparser.py",
        247,
    ),
    (
        "control_flow_statements_list -> control_flow_statements control_flow_statements_list",
        "control_flow_statements_list",
        2,
        "p_control_flow_statements_list",
        "lexerparser.py",
        255,
    ),
    (
        "control_flow_statements_list -> control_flow_statements",
        "control_flow_statements_list",
        1,
        "p_control_flow_statements_list",
        "lexerparser.py",
        256,
    ),
    (
        "control_flow_statements -> statement_list",
        "control_flow_statements",
        1,
        "p_control_flow_statements",
        "lexerparser.py",
        264,
    ),
    (
        "control_flow_statements -> LEAVE",
        "control_flow_statements",
        1,
        "p_control_flow_statements",
        "lexerparser.py",
        265,
    ),
    (
        "control_flow_statements -> PROCEED",
        "control_flow_statements",
        1,
        "p_control_flow_statements",
        "lexerparser.py",
        266,
    ),
    (
        "control_flow_statements -> DONATE expression",
        "control_flow_statements",
        2,
        "p_control_flow_statements",
        "lexerparser.py",
        267,
    ),
    (
        "expression -> ID",
        "expression",
        1,
        "p_expression",
        "lexerparser.py",
        279,
    ),
    (
        "expression -> STRING",
        "expression",
        1,
        "p_expression",
        "lexerparser.py",
        280,
    ),
    (
        "expression -> NUMBER",
        "expression",
        1,
        "p_expression",
        "lexerparser.py",
        281,
    ),
    (
        "expression -> TRUE",
        "expression",
        1,
        "p_expression",
        "lexerparser.py",
        282,
    ),
    (
        "expression -> FALSE",
        "expression",
        1,
        "p_expression",
        "lexerparser.py",
        283,
    ),
    (
        "expression -> builtin_call",
        "expression",
        1,
        "p_expression",
        "lexerparser.py",
        284,
    ),
    (
        "expression -> function_call",
        "expression",
        1,
        "p_expression",
        "lexerparser.py",
        285,
    ),
    (
        "expression -> expression PLUS expression",
        "expression",
        3,
        "p_expression",
        "lexerparser.py",
        286,
    ),
    (
        "expression -> expression MINUS expression",
        "expression",
        3,
        "p_expression",
        "lexerparser.py",
        287,
    ),
    (
        "expression -> expression ASTERISK expression",
        "expression",
        3,
        "p_expression",
        "lexerparser.py",
        288,
    ),
    (
        "expression -> expression DIVIDE expression",
        "expression",
        3,
        "p_expression",
        "lexerparser.py",
        289,
    ),
    (
        "expression -> expression EQUALS expression",
        "expression",
        3,
        "p_expression",
        "lexerparser.py",
        290,
    ),
    (
        "expression -> expression MORE expression",
        "expression",
        3,
        "p_expression",
        "lexerparser.py",
        291,
    ),
    (
        "expression -> expression LESS expression",
        "expression",
        3,
        "p_expression",
        "lexerparser.py",
        292,
    ),
    (
        "expression -> expression AND expression",
        "expression",
        3,
        "p_expression",
        "lexerparser.py",
        293,
    ),
    (
        "expression -> expression OR expression",
        "expression",
        3,
        "p_expression",
        "lexerparser.py",
        294,
    ),
    (
        "expression_list -> expression COMMA expression_list",
        "expression_list",
        3,
        "p_expression_list",
        "lexerparser.py",
        302,
    ),
    (
        "expression_list -> expression",
        "expression_list",
        1,
        "p_expression_list",
        "lexerparser.py",
        303,
    ),
    (
        "expression_list -> empty",
        "expression_list",
        1,
        "p_expression_list",
        "lexerparser.py",
        304,
    ),
    (
        "arg_list -> ID COMMA arg_list",
        "arg_list",
        3,
        "p_arg_list",
        "lexerparser.py",
        312,
    ),
    ("arg_list -> ID", "arg_list", 1, "p_arg_list", "lexerparser.py", 313),
    ("arg_list -> empty", "arg_list", 1, "p_arg_list", "lexerparser.py", 314),
    (
        "type_list -> type COMMA type_list",
        "type_list",
        3,
        "p_type_list",
        "lexerparser.py",
        322,
    ),
    ("type_list -> type", "type_list", 1, "p_type_list", "lexerparser.py", 323),
    (
        "type_list -> empty",
        "type_list",
        1,
        "p_type_list",
        "lexerparser.py",
        324,
    ),
    ("type -> NUM", "type", 1, "p_type", "lexerparser.py", 332),
    ("type -> STR", "type", 1, "p_type", "lexerparser.py", 333),
    ("type -> BOOL", "type", 1, "p_type", "lexerparser.py", 334),
    (
        "type -> LITERAL_A LSQUARE NUM RSQUARE",
        "type",
        4,
        "p_type",
        "lexerparser.py",
        335,
    ),
    (
        "type -> LITERAL_A LSQUARE STR RSQUARE",
        "type",
        4,
        "p_type",
        "lexerparser.py",
        336,
    ),
    (
        "type -> LITERAL_A LSQUARE BOOL RSQUARE",
        "type",
        4,
        "p_type",
        "lexerparser.py",
        337,
    ),
    (
        "type -> LITERAL_Q LSQUARE NUM RSQUARE",
        "type",
        4,
        "p_type",
        "lexerparser.py",
        338,
    ),
    (
        "type -> LITERAL_Q LSQUARE STR RSQUARE",
        "type",
        4,
        "p_type",
        "lexerparser.py",
        339,
    ),
    (
        "type -> LITERAL_Q LSQUARE BOOL RSQUARE",
        "type",
        4,
        "p_type",
        "lexerparser.py",
        340,
    ),
    (
        "type -> LITERAL_S LSQUARE NUM RSQUARE",
        "type",
        4,
        "p_type",
        "lexerparser.py",
        341,
    ),
    (
        "type -> LITERAL_S LSQUARE STR RSQUARE",
        "type",
        4,
        "p_type",
        "lexerparser.py",
        342,
    ),
    (
        "type -> LITERAL_S LSQUARE BOOL RSQUARE",
        "type",
        4,
        "p_type",
        "lexerparser.py",
        343,
    ),
    ("empty -> <empty>", "empty", 0, "p_empty", "lexerparser.py", 351),
]
